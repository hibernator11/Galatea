'use strict';

// Categories controller
angular.module('categories').controller('CategoriesController', ['$scope', '$stateParams', '$location', 'Authentication', 'Categories',
  function ($scope, $stateParams, $location, Authentication, Categories) {
    $scope.authentication = Authentication;

    // Create new Category
    $scope.create = function (isValid) {
      $scope.error = null;

      if (!isValid) {
        $scope.$broadcast('show-errors-check-validity', 'categoryForm');

        return false;
      }

      // Create new Category object
      var category = new Categories({
        title: this.title,
        content: this.content
      });

      // Redirect after save
      category.$save(function (response) {
        $location.path('categories/' + response._id);

        // Clear form fields
        $scope.title = '';
        $scope.content = '';
      }, function (errorResponse) {
        $scope.error = errorResponse.data.message;
      });
    };

    // Remove existing Category
    $scope.remove = function (category) {
      if (category) {
        category.$remove();

        for (var i in $scope.categories) {
          if ($scope.categories[i] === category) {
            $scope.categories.splice(i, 1);
          }
        }
      } else {
        $scope.category.$remove(function () {
          $location.path('categories');
        });
      }
    };

    // Update existing Category
    $scope.update = function (isValid) {
      $scope.error = null;

      if (!isValid) {
        $scope.$broadcast('show-errors-check-validity', 'categoryForm');

        return false;
      }

      var category = $scope.category;

      category.$update(function () {
        $location.path('categories/' + category._id);
      }, function (errorResponse) {
        $scope.error = errorResponse.data.message;
      });
    };

    // Find a list of Categories
    $scope.find = function () {
      $scope.categories = Categories.query();
    };

    // Find existing Category
    $scope.findOne = function () {
      $scope.category = Categories.get({
        categoryId: $stateParams.categoryId
      });
    };
  }
]);
